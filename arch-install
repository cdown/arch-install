#!/bin/bash -e

set -x

# curl -Lo setup https://bit.ly/1amkr3b

read -rp "Hostname: " hostname
read -rp "Device: " device
read -rp "Timezone: " timezone
read -rp "Encrypt (0/1): " encrypt
read -rp "Start fresh (0/1): " fresh
read -rp "Dual boot (0/1): " dual_boot
read -rp "TRIM (0/1): " trim
read -rp "btrfs (0/1): " btrfs

# Avoid reaching max label length for ext*
short_hostname=${hostname::5}

if (( fresh )); then
    fdisk "$device" << 'EOF'
o
n
p
1

+512M
n
p
2


a
2
w
EOF
    extra=''

    if [[ $device == *nvme* ]]; then
        # nvme devices look like /dev/nvme0n1 as the base device, then
        # /dev/nvme0n1p1 as the partition
        extra=p
    fi

    boot_partition=${device}${extra}1
    root_partition=${device}${extra}2
else
    read -rp "Boot partition: " boot_partition
    read -rp "Root partition: " root_partition
fi

mountpoint=$(mktemp -d)

root_crypt_device=cryptroot
root_crypt_device_path=/dev/mapper/$root_crypt_device

# 64 bit is disabled as of Syslinux 6.03, as pure 64-bit mode is not supported
# any more in that version.
mkfs.ext4 -O '^64bit' -L "$short_hostname"-/boot "$boot_partition"

mkfs_cmd=(mkfs.ext4 -O '^64bit')
(( btrfs )) && mkfs_cmd=(mkfs.btrfs)

if (( encrypt )); then
    cryptsetup -y -v luksFormat "$root_partition"
    cryptsetup luksOpen --allow-discards "$root_partition" "$root_crypt_device"
    "${mkfs_cmd[@]}" -L "$short_hostname"-/ "$root_crypt_device_path"
    mount "$root_crypt_device_path" "$mountpoint"
else
    "${mkfs_cmd[@]}" -L "$short_hostname"-/ "$root_partition"
    mount "$root_partition" "$mountpoint"
fi

mkdir -p "$mountpoint"/boot
mount "$boot_partition" "$mountpoint"/boot

pacman -Syy
pacman --noconfirm --ignore pacman -S reflector

if (( trim )); then
    fstrim -v "$mountpoint"
    fstrim -v "$mountpoint"/boot
fi

reflector \
    -c 'United Kingdom' -c France -c Germany -c Sweden -c Finland -c Denmark \
    -c Ireland -c Netherlands \
    -f 6 --protocol http --sort rate --save /etc/pacman.d/mirrorlist

# dialog + wpa_supplicant allow using wifi-menu out of the box after reboot
pacstrap "$mountpoint" base base-devel syslinux dialog wpa_supplicant git ansible openssh
(( btrfs )) && pacstrap "$mountpoint" btrfs-progs

if (( encrypt )); then
    sed -i '/^HOOKS=/s/filesystems/encrypt &/' "$mountpoint"/etc/mkinitcpio.conf
    arch-chroot "$mountpoint" mkinitcpio -p linux
fi

cp /etc/pacman.d/mirrorlist "$mountpoint"/etc/pacman.d/mirrorlist

(( btrfs )) && root_fs=btrfs || root_fs=ext4
cat > "$mountpoint"/etc/fstab << EOF
LABEL=$short_hostname-/boot /boot ext4     defaults,noatime 0 1
LABEL=$short_hostname-/     /     $root_fs defaults,noatime 0 1
EOF

echo 'LANG="en_US.UTF-8"' > "$mountpoint"/etc/locale.conf
cat > "$mountpoint"/etc/locale.gen << 'EOF'
en_US.UTF-8 UTF-8
EOF
echo "$hostname" > "$mountpoint"/etc/hostname

arch-chroot "$mountpoint" syslinux-install_update -i -a -m

if (( encrypt )); then
    encrypted_root_uuid=$(cryptsetup luksUUID "$root_partition")
    append="cryptdevice=UUID=$encrypted_root_uuid:$root_crypt_device:allow-discards root=$root_crypt_device_path rw"
else
    append="root=LABEL=$short_hostname-/ rw"
fi

cat > "$mountpoint"/boot/syslinux/syslinux.cfg << EOF
PROMPT 1
TIMEOUT 5
DEFAULT arch

LABEL arch
    LINUX ../vmlinuz-linux
    APPEND $append
    INITRD ../initramfs-linux.img

LABEL archfallback
    LINUX ../vmlinuz-linux
    APPEND $append
    INITRD ../initramfs-linux-fallback.img
EOF

(( dual_boot )) && cat >> "$mountpoint"/boot/syslinux/syslinux.cfg << 'EOF'

LABEL windows
    MENU LABEL windows
    COM32 chain.c32
    APPEND hd0 1
EOF

arch-chroot "$mountpoint" ln -sf /usr/share/zoneinfo/"$timezone" /etc/localtime
arch-chroot "$mountpoint" locale-gen

while ! arch-chroot "$mountpoint" passwd; do :; done
